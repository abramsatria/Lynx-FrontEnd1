import{z as l,a as r}from"./index-x0cUaSJO.js";const h=l("links",{state:()=>({links:[],sort:{field:"creationDate",type:-1},remainingPages:1,pagesize:80,page:0,selectedLinks:[]}),actions:{clear(){this.links=[],this.remainingPages=1,this.page=0},formatDate(t){function a(i){const c=i%10,u=i%100;return c===1&&u!==11?`${i}st`:c===2&&u!==12?`${i}nd`:c===3&&u!==13?`${i}rd`:`${i}th`}const s=new Date(t),e=a(s.getDate()),n=s.toLocaleString("default",{month:"short"}),o=s.getFullYear();return`${n} ${e}, ${o}`},async paginate({search:t,userID:a}){const e=await r().fetch(`/link/list?${new URLSearchParams({page:this.page,pagesize:this.pagesize,sortType:this.sort.type,sortField:this.sort.field,search:t,userID:a})}`,{});this.page+=1;const n=e.result.links.map(o=>(o.creationDate=this.formatDate(o.creationDate),o.visits=new Intl.NumberFormat("default",{}).format(o.visits||0),o));this.links=this.links.concat(n),this.remainingPages=e.result.remaining},async create({slug:t,destination:a}){const e=await r().fetch("/link",{method:"POST",body:JSON.stringify({slug:t,destination:a})});if(!e.success)return e;const n=e.result;return n.creationDate=this.formatDate(n.creationDate),n.link=`${window.location.origin}/${e.result.slug}`,this.links.unshift(n),{success:!0,result:{link:n}}},async get(t){const s=await r().fetch(`/link/single?id=${t}`,{method:"GET"});return s.success?s.result:null},async update({id:t,slug:a,destination:s}){const n=await r().fetch("/link",{method:"PATCH",body:JSON.stringify({id:t,slug:a,destination:s})});if(!n.success)return n;const o=this.links.findIndex(c=>c.id===t),i=n.result;return i.creationDate=this.formatDate(i.creationDate),i.visits=new Intl.NumberFormat("default",{}).format(i.visits||0),i.link=`${window.location.origin}/${n.result.slug}`,this.links[o]=i,n},async delete({ids:t}){const s=await r().fetch("/link",{method:"DELETE",body:JSON.stringify({ids:t})});return s.success&&(this.links=this.links.filter(e=>!t.includes(e.id)),this.selectedLinks=this.selectedLinks.filter(e=>!t.includes(e))),s},async import({file:t,service:a}){const s=r(),e=new FormData;return e.append("file",t),e.append("service",a.toLowerCase()),await s.fetch("/import",{method:"POST",body:e,contentType:!1})},async export({format:t}){return await r().fetch("/export",{method:"POST",body:JSON.stringify({format:t})})}}});export{h as u};
