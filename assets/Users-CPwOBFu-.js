import{_ as g,a as k,g as b,C as P,c as p,b as n,t as m,d as c,F as _,i as v,r as y,o as d,n as h,e as U,f,s as w}from"./index-x0cUaSJO.js";import{S as x}from"./SecretBox-D6wSkcRW.js";const E={components:{SecretBox:x},data(){return{users:[],account:k(),popups:b(),roles:[["Owner","owner"],["Admin","admin"],["Standard","standard"]]}},mounted(){this.getUsers()},methods:{async getUsers(){const t=await this.account.fetch("/user/list",{});t.success?this.users=t.result:this.popups.addPopup("Information",{title:"Error getting list of users",description:t.message,buttons:[{name:"Retry",type:"primary",action:"refresh"},{name:"Cancel",type:"secondary",actions:["navigate-home","return"]}]})},updateUser(t,e){const u=this.users.findIndex(l=>l.id===t);this.users[u]={...this.users[u],...e}},async updateUsername(t){const e=await this.popups.addPopup("ChangeUsername",{account:t.id,async:!0});this.updateUser(t.id,e.account)},async updateEmail(t){const e=await this.popups.addPopup("ChangeEmail",{account:t.id,async:!0});this.updateUser(t.id,e.account)},async updatePassword(t){const e=await this.popups.addPopup("ChangePassword",{account:t.id,async:!0});this.updateUser(t.id,e.account)},async createUser(){(await this.popups.addPopup("CreateUser",{async:!0})).success&&await this.getUsers()},async deleteUser(t){const e=await this.popups.addPopup("Information",{title:`Are you sure you want to delete ${t.username}?`,buttons:[{name:"Yes",type:"primary",action:"return",confirm:!0},{name:"No",type:"secondary",action:"return",confirm:!1}],async:!0});if(!e||e&&!e.confirm)return;const u=await this.popups.addPopup("Verify",{async:!0}),l=await this.popups.addPopup("Loader"),a=await this.account.fetch("/user",{method:"DELETE",body:JSON.stringify({user:{id:t.id},verification:u})});if(this.popups.closePopup(l.id),!a.success){this.getUsers(),this.popups.addPopup("Information",{title:"Error deleting the user",description:a.message,buttons:[{name:"Okay",type:"primary",action:"close-all"}]});return}await this.getUsers()},updateRoleMenu(t,e){if(e.id===this.account.account.id||this.account.account.role!=="owner")return;t.preventDefault();const u=this.roles.map(([l,a])=>({label:l,disabled:a===e.role,onClick:()=>{this.changeUserRole(a,e.id)}}));P.showContextMenu({x:t.x,y:t.y,items:u})},async changeUserRole(t,e){if(t==="owner"){const o=await this.popups.addPopup("Information",{title:"Promoting this user to owner will demote you to an admin, are you sure you want to continue?",buttons:[{name:"Yes",type:"primary",action:"return",confirm:!0},{name:"No",type:"secondary",action:"return",confirm:!1}],async:!0});if(!o||o&&!o.confirm)return}const u=await this.popups.addPopup("Verify",{async:!0}),l=await this.popups.addPopup("Loader"),a=await this.account.fetch("/user/role",{method:"POST",body:JSON.stringify({user:{role:t,userID:e},verification:u})});if(this.popups.closePopup(l.id),!a.success){this.getUsers(),this.popups.addPopup("Information",{title:"Error updating the user",description:a.message,buttons:[{name:"Okay",type:"primary",action:"close-all"}]});return}this.updateUser(e,a.result.user),t==="owner"&&(this.updateUser(this.account.account.id,{role:"admin"}),await this.account.getAccount(),this.users=this.users.filter(o=>o.role!=="owner"))},canUpdate(t){return this.account.account.id===t.id||this.account.account.role==="owner"&&t.role!=="owner"||this.account.account.role==="admin"&&t.role==="standard"}}},S={class:"users"},R={class:"add-user",align:"right"},N=["onClick"],B=["onClick"],I=["onClick"],M={class:"role"},O=["secret-set"],V=["onClick"],A=["onClick"],D={class:"delete-user"};function L(t,e,u,l,a,o){const i=y("font-awesome-icon"),C=y("SecretBox");return d(),p("div",S,[n("h2",null,"User Management - "+m(a.roles.find(([s,r])=>r===a.account.account.role)[0]),1),n("button",{class:"create-user",onClick:e[0]||(e[0]=(...s)=>o.createUser&&o.createUser(...s))},[c(i,{icon:["fas","fa-circle-plus"]}),e[1]||(e[1]=n("span",null,"Create User",-1))]),n("table",null,[n("thead",null,[e[2]||(e[2]=n("th",null,"Username",-1)),e[3]||(e[3]=n("th",null,"Email",-1)),e[4]||(e[4]=n("th",null,"Password",-1)),e[5]||(e[5]=n("th",null,"Role",-1)),e[6]||(e[6]=n("th",null,"Secret",-1)),n("th",R,[c(i,{icon:["fas","fa-circle-plus"],onClick:o.createUser},null,8,["onClick"])])]),n("tbody",null,[(d(!0),p(_,null,v(a.users,s=>(d(),p("tr",{key:s.id},[n("td",{class:h(o.canUpdate(s)?"editable":""),onClick:r=>o.updateUsername(s)},[c(i,{icon:["fas","user"],class:"mobile-icon"}),n("span",null,m(s.username),1),c(i,{icon:["fas","pencil"],class:"edit-pencil"})],10,N),n("td",{class:h(o.canUpdate(s)?"editable":""),onClick:r=>o.updateEmail(s)},[c(i,{icon:["fas","envelope"],class:"mobile-icon"}),n("span",null,m(s.email),1),c(i,{icon:["fas","pencil"],class:"edit-pencil"})],10,B),n("td",{class:h(o.canUpdate(s)?"editable":""),onClick:r=>o.updatePassword(s)},[c(i,{icon:["fas","key"],class:"mobile-icon"}),e[7]||(e[7]=n("span",null,"••••••••••",-1)),c(i,{icon:["fas","pencil"],class:"edit-pencil"})],10,I),n("td",M,[c(i,{icon:["fas","users"],class:"mobile-icon"}),n("span",null,m(s.role),1),s.id!==a.account.account.id&&a.account.account.role==="owner"?(d(),U(i,{key:0,icon:["fas","ellipsis-vertical"],onClick:r=>o.updateRoleMenu(r,s),class:"update-role-icon"},null,8,["onClick"])):f("",!0)]),n("td",{class:"user-secret","secret-set":!!s.secret},[c(C,{secret:s.secret,"user-i-d":s.id,onUpdateUser:o.updateUser},null,8,["secret","user-i-d","onUpdateUser"]),s.id!==a.account.account.id&&a.account.account.role==="owner"?(d(),p("button",{key:0,onClick:r=>o.updateRoleMenu(r,s),class:"update-role"},[c(i,{icon:["fas","users"]}),e[8]||(e[8]=w(" Update Role "))],8,V)):f("",!0),s.id!==a.account.account.id?(d(),p("button",{key:1,onClick:r=>o.deleteUser(s),class:"delete-user"},[c(i,{icon:["fas","trash-can"]}),e[9]||(e[9]=w(" Delete "))],8,A)):f("",!0)],8,O),n("td",D,[s.id!==a.account.account.id?(d(),U(i,{key:0,icon:["fas","trash-can"],onClick:r=>o.deleteUser(s)},null,8,["onClick"])):f("",!0)])]))),128))])])])}const J=g(E,[["render",L],["__scopeId","data-v-5dc9d604"]]);export{J as default};
