import{_ as u,a as m,g as h,r as f,o as b,c as w,b as p,d as o,w as y,t as _}from"./index-x0cUaSJO.js";const v={data(){return{account:m(),popups:h(),errors:{username:[],email:[],password:[],role:[]},role:"",response:""}},methods:{async createUser(n){const{username:t,email:l,password:c,options:s}=n,i={username:t,email:l,password:c,role:s.includes("admin")?"admin":"standard"},r=await this.popups.addPopup("Verify",{async:!0}),d=await this.popups.addPopup("Loader"),a=await this.account.fetch("/user",{method:"POST",body:JSON.stringify({user:i,verification:r})});if(this.popups.closePopup(d.id),!a.success){a.message==="Field(s) are already used"?(Object.keys(a.details.exists).filter(e=>a.details.exists[e]).forEach(e=>{this.errors[e]=[`This ${e} already exists`]}),console.log(this.errors)):a.message==="Invalid field(s)"?(Object.keys(a.details.invalid).filter(e=>a.details.invalid[e]).forEach(e=>{this.errors[e]=[`This ${e} does not match the criteria`]}),console.log(this.errors)):this.response=a.message;return}this.popups.closeSelf(this,{success:!0})}}},g={class:"createUser"};function x(n,t,l,c,s,i){const r=f("FormKit");return b(),w("div",g,[t[0]||(t[0]=p("h2",null,"Create User",-1)),o(r,{type:"form","submit-label":"Create User","submit-attrs":{"button-type":"primary"},onSubmit:i.createUser},{default:y(()=>[o(r,{name:"username",type:"text",label:"Username",help:"Alphanumeric, underscores and periods allowed but not at the start or end of the username.",validation:[["required"],["matches",new RegExp("^(?=.{3,20}$)(?![_.])(?!.*[_.]{2})[a-zA-Z0-9._]+(?<![_.])$")]],"validation-messages":{matches:"Username does not match requirements."},errors:s.errors.username},null,8,["errors"]),o(r,{name:"email",type:"email",label:"Email",validation:"required:trim",errors:s.errors.email},null,8,["errors"]),o(r,{type:"password",name:"password",label:"Password",help:"At least 1 lowercase, 1 uppercase, 1 number and 1 special character. Minimum of 12 characters",validation:[["required"],["matches",/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*\W)(?!.* ).{12,}$/]],"validation-messages":{matches:"Password does not match requirements."},errors:s.errors.password},null,8,["errors"]),o(r,{type:"password",name:"password_confirm",label:"Confirm password",validation:"required|confirm:password","validation-label":"Password confirmation"}),o(r,{type:"checkbox",name:"options",label:"Options",options:[{value:"admin",label:"Admin",attrs:{disabled:s.account.account.role!=="owner"},help:s.account.account.role!=="owner"?"You need to be the owner to create admin users.":!1}]},null,8,["options"]),p("p",null,_(s.response),1)]),_:1},8,["onSubmit"])])}const U=u(v,[["render",x]]);export{U as default};
